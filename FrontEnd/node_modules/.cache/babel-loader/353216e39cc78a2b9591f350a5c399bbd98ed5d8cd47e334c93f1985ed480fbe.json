{"ast":null,"code":"import bcrypt from \"bcryptjs\";\n\n//  Function to initialize default users and data in localStorage\nexport const initializeLocalStorage = () => {\n  const defaultUsers = [{\n    username: \"Andrew\",\n    password: bcrypt.hashSync(\"Andrew123\", 10),\n    email: \"Andrew@yahoo.com\",\n    role: \"Parent\",\n    team: \"ABY\"\n  }, {\n    username: \"Bansari\",\n    password: bcrypt.hashSync(\"Bansari123\", 10),\n    email: \"Bansari@yahoo.com\",\n    role: \"Parent\",\n    team: \"ABY\"\n  }, {\n    username: \"Yen\",\n    password: bcrypt.hashSync(\"Bob123\", 10),\n    email: \"Yen@yahoo.com\",\n    role: \"Parent\",\n    team: \"ABY\"\n  }, {\n    username: \"Bob\",\n    password: bcrypt.hashSync(\"Bob123\", 10),\n    email: \"bob@yahoo.com\",\n    role: \"Child\",\n    team: \"ABY\"\n  }, {\n    username: \"Luna\",\n    password: bcrypt.hashSync(\"Luna123\", 10),\n    email: \"Luna@yahoo.com\",\n    role: \"Child\",\n    team: \"ABY\"\n  }];\n  if (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(defaultUsers));\n  }\n  if (!localStorage.getItem(\"teamName\")) {\n    localStorage.setItem(\"teamName\", \"ABY\");\n  }\n  if (!localStorage.getItem(\"chores\")) {\n    localStorage.setItem(\"chores\", JSON.stringify([]));\n  }\n};\n\n// Retrieve users from localStorage\nexport const getUsers = () => JSON.parse(localStorage.getItem(\"users\")) || [];\n\n// Save updated users to localStorage\nexport const saveUsers = users => {\n  localStorage.setItem(\"users\", JSON.stringify(users));\n};\n\n// Authenticate user login using email and password\nexport const authenticateUser = (email, password) => {\n  const users = getUsers();\n  const user = users.find(user => user.email.toLowerCase() === email.toLowerCase());\n  if (user && bcrypt.compareSync(password, user.password)) {\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(user)); // Store logged-in user\n    return user;\n  }\n  return null; // Return null if authentication fails\n};\n\n// Get the currently logged-in user\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"loggedInUser\")) || null;\n};\n\n// Log out the user by removing session data\nexport const logoutUser = () => {\n  localStorage.removeItem(\"loggedInUser\");\n};\n\n// Retrieve chores from localStorage\nexport const getChores = () => {\n  const chores = JSON.parse(localStorage.getItem(\"chores\")) || [];\n  return chores.map(chore => ({\n    ...chore,\n    points: chore.points || 5 // Default points to 5 if not set\n  }));\n};\n\n// Save updated chores to localStorage\nexport const saveChores = chores => {\n  localStorage.setItem(\"chores\", JSON.stringify(chores));\n};\n\n// Add a new chore to storage\nexport const addChoreToStorage = chore => {\n  const chores = getChores();\n  const newChore = {\n    ...chore,\n    points: chore.points || 5,\n    date: new Date(chore.date).toISOString()\n  };\n  chores.push(newChore);\n  saveChores(chores);\n};\n\n// âœ… Restore `getUserPoints`\nexport const getUserPoints = username => {\n  const users = getUsers();\n  const user = users.find(user => user.username === username);\n  return user ? user.points || 0 : 0;\n};\n\n// Update points for a specific user\nexport const updateUserPoints = (username, points) => {\n  const users = getUsers();\n  const userIndex = users.findIndex(user => user.username === username);\n  if (userIndex !== -1) {\n    const user = users[userIndex];\n    user.totalPoints = (user.totalPoints || 0) + (points - (user.points || 0)); // Track total earned points\n    user.points = points; // Unspent points\n\n    saveUsers(users);\n  }\n};\n\n// Retrieve total points earned since account creation\nexport const getTotalPoints = username => {\n  const users = getUsers();\n  const user = users.find(user => user.username === username);\n  return user ? user.totalPoints || 0 : 0;\n};\n\n// Retrieve unspent points (for redeeming rewards)\nexport const getUnspentPoints = username => {\n  const users = getUsers();\n  const user = users.find(user => user.username === username);\n  return user ? user.points || 0 : 0;\n};\n\n// Leveling system based on total earned points\nexport const getUserLevel = totalPoints => {\n  if (totalPoints >= 1000) return {\n    level: 5,\n    name: \"Master\",\n    color: \"red\"\n  };\n  if (totalPoints >= 600) return {\n    level: 4,\n    name: \"Elite\",\n    color: \"orange\"\n  };\n  if (totalPoints >= 400) return {\n    level: 3,\n    name: \"Challenger\",\n    color: \"green\"\n  };\n  if (totalPoints >= 200) return {\n    level: 2,\n    name: \"Apprentice\",\n    color: \"blue\"\n  };\n  return {\n    level: 1,\n    name: \"Beginner\",\n    color: \"brown\"\n  };\n};\n\n// Retrieve user level from total points\nexport const getUserLevelFromStorage = username => {\n  const users = getUsers();\n  const user = users.find(user => user.username === username);\n  return user ? getUserLevel(user.totalPoints || 0) : {\n    level: 1,\n    name: \"Beginner\",\n    color: \"brown\"\n  };\n};\n\n// Mark chore as completed in storage\nexport const completeChoreInStorage = choreId => {\n  const chores = getChores();\n  const updatedChores = chores.map(chore => chore.id === choreId ? {\n    ...chore,\n    completed: true\n  } : chore);\n  saveChores(updatedChores);\n};\n\n// Function to store rewarded points as a completed chore\nexport const addRewardAsCompletedChore = (username, rewardName, rewardPoints) => {\n  const chores = getChores();\n  const newChore = {\n    id: Date.now(),\n    text: `Reward: ${rewardName}`,\n    completed: true,\n    points: rewardPoints,\n    assignedTo: username,\n    date: new Date().toISOString() // Store with the current date\n  };\n  chores.push(newChore);\n  saveChores(chores);\n};\n\n// Function to store redeemed rewards in localStorage\nexport const storeRedeemedReward = (username, rewardName, rewardPoints) => {\n  const redeemedRewards = JSON.parse(localStorage.getItem(\"redeemedRewards\")) || [];\n  const newRedemption = {\n    id: Date.now(),\n    username,\n    rewardName,\n    pointsSpent: rewardPoints,\n    date: new Date().toISOString()\n  };\n  redeemedRewards.push(newRedemption);\n  localStorage.setItem(\"redeemedRewards\", JSON.stringify(redeemedRewards));\n};\n\n// Retrieve redeemed rewards\nexport const getRedeemedRewards = () => {\n  return JSON.parse(localStorage.getItem(\"redeemedRewards\")) || [];\n};\n\n// Function to store rewards in localStorage\nexport const saveRewards = rewards => {\n  localStorage.setItem(\"rewards\", JSON.stringify(rewards));\n};\n\n// Function to get rewards from localStorage\nexport const getRewards = () => {\n  return JSON.parse(localStorage.getItem(\"rewards\")) || [{\n    id: 1,\n    name: \"Go out and eat\",\n    cost: 50\n  }, {\n    id: 2,\n    name: \"No Chores Day\",\n    cost: 75\n  }, {\n    id: 3,\n    name: \"Go to the Movies\",\n    cost: 100\n  }];\n};","map":{"version":3,"names":["bcrypt","initializeLocalStorage","defaultUsers","username","password","hashSync","email","role","team","localStorage","getItem","setItem","JSON","stringify","getUsers","parse","saveUsers","users","authenticateUser","user","find","toLowerCase","compareSync","getCurrentUser","logoutUser","removeItem","getChores","chores","map","chore","points","saveChores","addChoreToStorage","newChore","date","Date","toISOString","push","getUserPoints","updateUserPoints","userIndex","findIndex","totalPoints","getTotalPoints","getUnspentPoints","getUserLevel","level","name","color","getUserLevelFromStorage","completeChoreInStorage","choreId","updatedChores","id","completed","addRewardAsCompletedChore","rewardName","rewardPoints","now","text","assignedTo","storeRedeemedReward","redeemedRewards","newRedemption","pointsSpent","getRedeemedRewards","saveRewards","rewards","getRewards","cost"],"sources":["C:/Users/yluin/PROJECTS/SameTeamBob/FrontEnd/src/components/utils/localStorageUtils.js"],"sourcesContent":["import bcrypt from \"bcryptjs\";\r\n\r\n//  Function to initialize default users and data in localStorage\r\nexport const initializeLocalStorage = () => {\r\n    const defaultUsers = [\r\n        { username: \"Andrew\", password: bcrypt.hashSync(\"Andrew123\", 10), email: \"Andrew@yahoo.com\", role: \"Parent\", team: \"ABY\" },\r\n        { username: \"Bansari\", password: bcrypt.hashSync(\"Bansari123\", 10), email: \"Bansari@yahoo.com\", role: \"Parent\", team: \"ABY\" },\r\n        { username: \"Yen\", password: bcrypt.hashSync(\"Bob123\", 10), email: \"Yen@yahoo.com\", role: \"Parent\", team: \"ABY\" },\r\n        { username: \"Bob\", password: bcrypt.hashSync(\"Bob123\", 10), email: \"bob@yahoo.com\", role: \"Child\", team: \"ABY\" },\r\n        { username: \"Luna\", password: bcrypt.hashSync(\"Luna123\", 10), email: \"Luna@yahoo.com\", role: \"Child\", team: \"ABY\" }\r\n    ];\r\n    \r\n        if (!localStorage.getItem(\"users\")) {\r\n            localStorage.setItem(\"users\", JSON.stringify(defaultUsers));\r\n        }\r\n    \r\n        if (!localStorage.getItem(\"teamName\")) {\r\n            localStorage.setItem(\"teamName\", \"ABY\");\r\n        }\r\n    \r\n        if (!localStorage.getItem(\"chores\")) {\r\n            localStorage.setItem(\"chores\", JSON.stringify([]));\r\n        }\r\n    };\r\n    \r\n    // Retrieve users from localStorage\r\n    export const getUsers = () => JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    \r\n    // Save updated users to localStorage\r\n    export const saveUsers = (users) => {\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n    };\r\n    \r\n    // Authenticate user login using email and password\r\n    export const authenticateUser = (email, password) => {\r\n        const users = getUsers();\r\n        const user = users.find(user => user.email.toLowerCase() === email.toLowerCase());\r\n    \r\n        if (user && bcrypt.compareSync(password, user.password)) {\r\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(user)); // Store logged-in user\r\n            return user;\r\n        }\r\n    \r\n        return null; // Return null if authentication fails\r\n    };\r\n    \r\n    // Get the currently logged-in user\r\n    export const getCurrentUser = () => {\r\n        return JSON.parse(localStorage.getItem(\"loggedInUser\")) || null;\r\n    };\r\n    \r\n    // Log out the user by removing session data\r\n    export const logoutUser = () => {\r\n        localStorage.removeItem(\"loggedInUser\");\r\n    };\r\n    \r\n    // Retrieve chores from localStorage\r\n    export const getChores = () => {\r\n        const chores = JSON.parse(localStorage.getItem(\"chores\")) || [];\r\n        return chores.map(chore => ({\r\n            ...chore,\r\n            points: chore.points || 5 // Default points to 5 if not set\r\n        }));\r\n    };\r\n    \r\n    // Save updated chores to localStorage\r\n    export const saveChores = (chores) => {\r\n        localStorage.setItem(\"chores\", JSON.stringify(chores));\r\n    };\r\n    \r\n    // Add a new chore to storage\r\n    export const addChoreToStorage = (chore) => {\r\n        const chores = getChores();\r\n        const newChore = {\r\n            ...chore,\r\n            points: chore.points || 5,\r\n            date: new Date(chore.date).toISOString()\r\n        };\r\n        chores.push(newChore);\r\n        saveChores(chores);\r\n    };\r\n    \r\n    // âœ… Restore `getUserPoints`\r\n    export const getUserPoints = (username) => {\r\n        const users = getUsers();\r\n        const user = users.find(user => user.username === username);\r\n        return user ? user.points || 0 : 0;\r\n    };\r\n    \r\n    // Update points for a specific user\r\n    export const updateUserPoints = (username, points) => {\r\n        const users = getUsers();\r\n        const userIndex = users.findIndex(user => user.username === username);\r\n    \r\n        if (userIndex !== -1) {\r\n            const user = users[userIndex];\r\n    \r\n            user.totalPoints = (user.totalPoints || 0) + (points - (user.points || 0)); // Track total earned points\r\n            user.points = points; // Unspent points\r\n    \r\n            saveUsers(users);\r\n        }\r\n    };\r\n    \r\n    // Retrieve total points earned since account creation\r\n    export const getTotalPoints = (username) => {\r\n        const users = getUsers();\r\n        const user = users.find(user => user.username === username);\r\n        return user ? user.totalPoints || 0 : 0;\r\n    };\r\n    \r\n    // Retrieve unspent points (for redeeming rewards)\r\n    export const getUnspentPoints = (username) => {\r\n        const users = getUsers();\r\n        const user = users.find(user => user.username === username);\r\n        return user ? user.points || 0 : 0;\r\n    };\r\n    \r\n    // Leveling system based on total earned points\r\n    export const getUserLevel = (totalPoints) => {\r\n        if (totalPoints >= 1000) return { level: 5, name: \"Master\", color: \"red\" };\r\n        if (totalPoints >= 600) return { level: 4, name: \"Elite\", color: \"orange\" };\r\n        if (totalPoints >= 400) return { level: 3, name: \"Challenger\", color: \"green\" };\r\n        if (totalPoints >= 200) return { level: 2, name: \"Apprentice\", color: \"blue\" };\r\n        return { level: 1, name: \"Beginner\", color: \"brown\" };\r\n    };\r\n    \r\n    // Retrieve user level from total points\r\n    export const getUserLevelFromStorage = (username) => {\r\n        const users = getUsers();\r\n        const user = users.find(user => user.username === username);\r\n        return user ? getUserLevel(user.totalPoints || 0) : { level: 1, name: \"Beginner\", color: \"brown\" };\r\n    };\r\n    \r\n    // Mark chore as completed in storage\r\n    export const completeChoreInStorage = (choreId) => {\r\n        const chores = getChores();\r\n        const updatedChores = chores.map(chore =>\r\n            chore.id === choreId ? { ...chore, completed: true } : chore\r\n        );\r\n    \r\n        saveChores(updatedChores);\r\n    };\r\n    \r\n    // Function to store rewarded points as a completed chore\r\n    export const addRewardAsCompletedChore = (username, rewardName, rewardPoints) => {\r\n        const chores = getChores();\r\n        const newChore = {\r\n            id: Date.now(),\r\n            text: `Reward: ${rewardName}`,\r\n            completed: true,\r\n            points: rewardPoints,\r\n            assignedTo: username,\r\n            date: new Date().toISOString(), // Store with the current date\r\n        };\r\n        chores.push(newChore);\r\n        saveChores(chores);\r\n    };\r\n\r\n    // Function to store redeemed rewards in localStorage\r\n    export const storeRedeemedReward = (username, rewardName, rewardPoints) => {\r\n        const redeemedRewards = JSON.parse(localStorage.getItem(\"redeemedRewards\")) || [];\r\n        \r\n        const newRedemption = {\r\n            id: Date.now(),\r\n            username,\r\n            rewardName,\r\n            pointsSpent: rewardPoints,\r\n            date: new Date().toISOString(),\r\n        };\r\n\r\n        redeemedRewards.push(newRedemption);\r\n        localStorage.setItem(\"redeemedRewards\", JSON.stringify(redeemedRewards));\r\n    };\r\n\r\n    // Retrieve redeemed rewards\r\n    export const getRedeemedRewards = () => {\r\n        return JSON.parse(localStorage.getItem(\"redeemedRewards\")) || [];\r\n    };\r\n\r\n    // Function to store rewards in localStorage\r\n    export const saveRewards = (rewards) => {\r\n        localStorage.setItem(\"rewards\", JSON.stringify(rewards));\r\n    };\r\n\r\n    // Function to get rewards from localStorage\r\n    export const getRewards = () => {\r\n        return JSON.parse(localStorage.getItem(\"rewards\")) || [\r\n            { id: 1, name: \"Go out and eat\", cost: 50 },\r\n            { id: 2, name: \"No Chores Day\", cost: 75 },\r\n            { id: 3, name: \"Go to the Movies\", cost: 100 }\r\n        ];\r\n    };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}