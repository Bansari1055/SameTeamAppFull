{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yluin\\\\PROJECTS\\\\SameTeamBob\\\\FrontEnd\\\\src\\\\components\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// File: src/components/pages/HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  // Initialize darkMode state based on local storage\n  const [darkMode, setDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const navigate = useNavigate();\n\n  // Toggle dark mode on button click\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    if (!darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  };\n\n  // Handling Sign In and Sign Up clicks\n  const handleSignInClick = () => {\n    navigate(\"/signin\");\n  };\n  const handleSignUpClick = () => {\n    navigate(\"/signup\");\n  };\n\n  // Apply dark mode from local storage on page load (if previously set)\n  useEffect(() => {\n    if (localStorage.getItem('darkMode') === 'true') {\n      setDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  // Store dark mode state to local storage\n  useEffect(() => {\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: darkMode ? 'logodark.png' : 'logo.png' // Change logo based on dark mode\n        ,\n        alt: \"Logo\",\n        style: {\n          width: '250px',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSignInClick,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSignUpClick,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"5NVdq/UL618vgysgXyKD98BAskI=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","darkMode","setDarkMode","localStorage","getItem","navigate","handleToggleDarkMode","document","body","classList","add","remove","handleSignInClick","handleSignUpClick","setItem","className","children","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yluin/PROJECTS/SameTeamBob/FrontEnd/src/components/pages/HomePage.js"],"sourcesContent":["// File: src/components/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst HomePage = () => {\r\n    // Initialize darkMode state based on local storage\r\n    const [darkMode, setDarkMode] = useState(() => {\r\n        return localStorage.getItem('darkMode') === 'true';\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    // Toggle dark mode on button click\r\n    const handleToggleDarkMode = () => {\r\n        setDarkMode(!darkMode);\r\n        if (!darkMode) {\r\n            document.body.classList.add('dark-mode');\r\n        } else {\r\n            document.body.classList.remove('dark-mode');\r\n        }\r\n    };\r\n\r\n    // Handling Sign In and Sign Up clicks\r\n    const handleSignInClick = () => {\r\n        navigate(\"/signin\");\r\n    };\r\n\r\n    const handleSignUpClick = () => {\r\n        navigate(\"/signup\");\r\n    };\r\n\r\n    // Apply dark mode from local storage on page load (if previously set)\r\n    useEffect(() => {\r\n        if (localStorage.getItem('darkMode') === 'true') {\r\n            setDarkMode(true);\r\n            document.body.classList.add('dark-mode');\r\n        }\r\n    }, []);\r\n\r\n    // Store dark mode state to local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('darkMode', darkMode);\r\n    }, [darkMode]);\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"logo\">\r\n                <img \r\n                    src={darkMode ? 'logodark.png' : 'logo.png'} // Change logo based on dark mode\r\n                    alt=\"Logo\"\r\n                    style={{ width: '250px', height: 'auto' }}\r\n                />\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <button className=\"button\" onClick={handleSignInClick}>Sign In</button>\r\n                <button className=\"button\" onClick={handleSignUpClick}>Sign Up</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,MAAM;IAC3C,OAAOS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;EACtD,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IAC/BJ,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtB,IAAI,CAACA,QAAQ,EAAE;MACXM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5C,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC/C;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BP,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC5BR,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACZ,IAAIQ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM,EAAE;MAC7CF,WAAW,CAAC,IAAI,CAAC;MACjBK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5C;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACZQ,YAAY,CAACW,OAAO,CAAC,UAAU,EAAEb,QAAQ,CAAC;EAC9C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BlB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBlB,OAAA;QACImB,GAAG,EAAEhB,QAAQ,GAAG,cAAc,GAAG,UAAW,CAAC;QAAA;QAC7CiB,GAAG,EAAC,MAAM;QACVC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN3B,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBlB,OAAA;QAAQiB,SAAS,EAAC,QAAQ;QAACW,OAAO,EAAEd,iBAAkB;QAAAI,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvE3B,OAAA;QAAQiB,SAAS,EAAC,QAAQ;QAACW,OAAO,EAAEb,iBAAkB;QAAAG,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAtDID,QAAQ;EAAA,QAKOH,WAAW;AAAA;AAAA+B,EAAA,GAL1B5B,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}